/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import static gui.CompanyManager.logger;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.DeliveryModel;
import org.apache.log4j.Logger;

/**
 *
 * @author EZIO AUDITORY
 */
public class DeliveryManager extends javax.swing.JFrame {

    /**
     * Creates new form DeliveryManager
     */
    private DeliveryModel deliveryModel;
    private LoadTransporterDialog loadTransporterDialog;
    private LoadInvoiceDialog loadInvoiceDialog;
    static Logger logger = Logger.getLogger(DeliveryManager.class.getName());

    DefaultTableModel deliveryTableModel;
    DefaultTableModel deliveryTableModelFull;

    int trnsporterNo;

    public DeliveryManager() {
        initComponents();
        logger.debug("Access to DeliveryManager.java");

        deliveryTableModel = (DefaultTableModel) deliveryTable.getModel();
        deliveryTableModelFull = (DefaultTableModel) deliveryTableFull.getModel();

        deliveryModel = new DeliveryModel();
        loadTransporterDialog = new LoadTransporterDialog(this, rootPaneCheckingEnabled);
        loadInvoiceDialog = new LoadInvoiceDialog(this, rootPaneCheckingEnabled);

        deliveryModel.loadDeliveryTable("", deliveryTableModel);
        deliveryModel.loadDeliveryTableFull("", deliveryTableModelFull);

        deliveryNoLoad();

        deliveryDateChooser.setDate(new java.util.Date());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        deliveryNoField = new javax.swing.JTextField();
        transporterField = new javax.swing.JTextField();
        startLocationField = new javax.swing.JTextField();
        endLocationField = new javax.swing.JTextField();
        deliveryChargeField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        deliveryDateChooser = new com.toedter.calendar.JDateChooser();
        invoiceNoField = new javax.swing.JTextField();
        invoiceButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryTable = new javax.swing.JTable();
        keywordField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        keywordFieldFull = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        deliveryTableFull = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        invoiceButton1 = new javax.swing.JButton();
        deliveryHistoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delivery Manager");
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        deliveryNoField.setEditable(false);

        transporterField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transporterFieldMouseClicked(evt);
            }
        });

        deliveryChargeField.setText("0.00");
        deliveryChargeField.setEnabled(false);
        deliveryChargeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deliveryChargeFieldKeyPressed(evt);
            }
        });

        jLabel1.setText("Delivery No");

        jLabel2.setText("Date");

        jLabel3.setText("Transporter");

        jLabel4.setText("Start Location");

        jLabel5.setText("End Location");

        jLabel6.setText("Delivery Charge");

        jLabel8.setText("Invoice No");

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        removeButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeButton.setText("Remove");
        removeButton.setEnabled(false);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        newButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        invoiceNoField.setText("0");
        invoiceNoField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceNoFieldMouseClicked(evt);
            }
        });
        invoiceNoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invoiceNoFieldKeyPressed(evt);
            }
        });

        invoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton.setText("Invoice");
        invoiceButton.setEnabled(false);
        invoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deliveryNoField)
                            .addComponent(deliveryDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transporterField)
                            .addComponent(invoiceNoField)))
                    .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(endLocationField)
                            .addComponent(deliveryChargeField)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(startLocationField))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(invoiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deliveryNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(deliveryDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(transporterField)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(invoiceNoField))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startLocationField)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(endLocationField)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deliveryChargeField)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Deliveries", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        deliveryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Delivery No", "Date", "Transporter", "Invoice No", "Start Location", "End Location", "Delivery Charge"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deliveryTable.setRowHeight(25);
        deliveryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(deliveryTable);

        keywordField.setForeground(new java.awt.Color(153, 153, 153));
        keywordField.setText("Search");
        keywordField.setToolTipText("Search");
        keywordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keywordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordFieldFocusLost(evt);
            }
        });
        keywordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 929, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Create Delivery", jPanel1);

        keywordFieldFull.setForeground(new java.awt.Color(153, 153, 153));
        keywordFieldFull.setText("Search");
        keywordFieldFull.setToolTipText("Search");
        keywordFieldFull.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keywordFieldFullFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordFieldFullFocusLost(evt);
            }
        });
        keywordFieldFull.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordFieldFullKeyReleased(evt);
            }
        });

        deliveryTableFull.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Delivery No", "Delivery Date", "Transporter", "Invoice No", "Start Location", "End Location", "Delivery Charge"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deliveryTableFull.setRowHeight(25);
        jScrollPane3.setViewportView(deliveryTableFull);

        invoiceButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton1.setText("Invoice");
        invoiceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButton1ActionPerformed(evt);
            }
        });

        deliveryHistoryButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deliveryHistoryButton.setText("Delivery History");
        deliveryHistoryButton.setOpaque(false);
        deliveryHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryHistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1472, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keywordFieldFull, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deliveryHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(keywordFieldFull, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliveryHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Delivery History", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String deliveryNo = deliveryNoField.getText();
        Date deliveryDate = deliveryDateChooser.getDate();
        //transporterNo
        String invoiceNo = invoiceNoField.getText();
        String startLocation = startLocationField.getText();
        String endLocation = endLocationField.getText();
        String deliveryCharge = deliveryChargeField.getText();

        logger.debug("Check validations");
        if (trnsporterNo == 0 || transporterField.getText().equals("")) {
            loadTransporterDialog.setVisible(true);
            Object[] transporterData = loadTransporterDialog.getTransporterData();
            trnsporterNo = (int) transporterData[0];
            transporterField.setText((String) transporterData[1]);
        } else if (invoiceNo.equals("0") || invoiceNo.equals("")) {
            loadInvoiceDialog.setVisible(true);
            Object[] invoiceData = loadInvoiceDialog.getInvoiceData();
            invoiceNoField.setText(new String(invoiceData[0] + ""));
            deliveryChargeField.setText(new String(invoiceData[1] + ""));
        } else if (startLocation.equals("")) {
            JOptionPane.showConfirmDialog(rootPane, "Please Enter The Start Location !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            startLocationField.requestFocus(true);
        } else if (endLocation.equals("")) {
            JOptionPane.showConfirmDialog(rootPane, "Please Enter The End Location !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            endLocationField.requestFocus(true);
        } else {
            String result = deliveryModel.saveDelivery(deliveryNo, deliveryDate, trnsporterNo, invoiceNo, startLocation, endLocation, deliveryCharge);
            if (result.equals("Success")) {
                JOptionPane.showConfirmDialog(rootPane, result, "Message", -1, 1);
                deliveryModel.loadDeliveryTable("", deliveryTableModel);
                deliveryModel.loadDeliveryTableFull("", deliveryTableModelFull);
                invoiceButton.setEnabled(true);
                logger.debug("Message: " + result);
            } else {
                JOptionPane.showConfirmDialog(rootPane, result, "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: " + result);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String deliveryNo = deliveryNoField.getText();
        Date deliveryDate = deliveryDateChooser.getDate();
        //transporterNo
        String invoiceNo = invoiceNoField.getText();
        String startLocation = startLocationField.getText();
        String endLocation = endLocationField.getText();
        String deliveryCharge = deliveryChargeField.getText();

        logger.debug("Check validations");
        if (trnsporterNo == 0 || transporterField.getText().equals("")) {
            loadTransporterDialog.setVisible(true);
            Object[] transporterData = loadTransporterDialog.getTransporterData();
            trnsporterNo = (int) transporterData[0];
            transporterField.setText((String) transporterData[1]);
        } else if (invoiceNo.equals("0") || invoiceNo.equals("")) {
            loadInvoiceDialog.setVisible(true);
            Object[] invoiceData = loadInvoiceDialog.getInvoiceData();
            invoiceNoField.setText(new String(invoiceData[0] + ""));
            deliveryChargeField.setText(new String(invoiceData[1] + ""));
        } else if (startLocation.equals("")) {
            JOptionPane.showConfirmDialog(rootPane, "Please Enter The Start Location !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            startLocationField.requestFocus(true);
        } else if (endLocation.equals("")) {
            JOptionPane.showConfirmDialog(rootPane, "Please Enter The End Location !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            endLocationField.requestFocus(true);
        } else {
            String result = deliveryModel.updateDelivery(deliveryNo, deliveryDate, trnsporterNo, invoiceNo, startLocation, endLocation, deliveryCharge);
            if (result.equals("Success")) {
                JOptionPane.showConfirmDialog(rootPane, result, "Message", -1, 1);
                deliveryModel.loadDeliveryTable("", deliveryTableModel);
                deliveryModel.loadDeliveryTableFull("", deliveryTableModelFull);
                invoiceButton.setEnabled(true);
                logger.debug("Message: " + result);
            } else {
                JOptionPane.showConfirmDialog(rootPane, result, "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: " + result);
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        String deliveryNo = deliveryNoField.getText();

        String result = deliveryModel.removeDelivery(deliveryNo);
        if (result.equals("Success")) {
            JOptionPane.showConfirmDialog(rootPane, result, "Message", -1, 1);
            deliveryModel.loadDeliveryTable("", deliveryTableModel);
            deliveryModel.loadDeliveryTableFull("", deliveryTableModelFull);
            invoiceButton.setEnabled(true);
            logger.debug("Message: " + result);
        } else {
            JOptionPane.showConfirmDialog(rootPane, result, "Error", -1, JOptionPane.ERROR_MESSAGE);
            logger.error("Error: " + result);
        }

        clearFields();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_newButtonActionPerformed

    private void deliveryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryTableMouseClicked
        // TODO add your handling code here:
        clearFields();

        int row = deliveryTable.getSelectedRow();
        int deliveryNo = (int) deliveryTableModel.getValueAt(row, 0);
        Object[] productData = deliveryModel.getSelectedDeliveryData(deliveryNo);

        deliveryNoField.setText(new String(productData[0] + ""));
        deliveryDateChooser.setDate((Date) productData[1]);
        trnsporterNo = (int) productData[2];
        transporterField.setText((String) productData[3]);
        invoiceNoField.setText(new String(productData[4] + ""));
        startLocationField.setText((String) productData[5]);
        endLocationField.setText((String) productData[6]);
        deliveryChargeField.setText(new String(productData[7] + ""));

        if (deliveryNoField.getText().length() > 0) {
            saveButton.setEnabled(false);
            updateButton.setEnabled(true);
            removeButton.setEnabled(true);
            invoiceButton.setEnabled(true);
        } else {
            //            registerButton.setEnabled(true);
            //            updateButton.setEnabled(false);
            //            removeButton.setEnabled(false);
        }

    }//GEN-LAST:event_deliveryTableMouseClicked

    private void keywordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFocusGained
        // TODO add your handling code here:
        if (keywordField.getText().equals("Search")) {
            keywordField.setText("");
            keywordField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_keywordFieldFocusGained

    private void keywordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFocusLost
        // TODO add your handling code here:
        if (keywordField.getText().equals("")) {
            keywordField.setText("Search");
            keywordField.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_keywordFieldFocusLost

    private void keywordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordFieldKeyReleased
        // TODO add your handling code here:
        String keyword = keywordField.getText();
        deliveryModel.loadDeliveryTable(keyword, deliveryTableModel);
    }//GEN-LAST:event_keywordFieldKeyReleased

    private void transporterFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transporterFieldMouseClicked
        // TODO add your handling code here:
        loadTransporterDialog.setVisible(true);

        Object[] transporterData = loadTransporterDialog.getTransporterData();
        trnsporterNo = (int) transporterData[0];
        transporterField.setText((String) transporterData[1]);
    }//GEN-LAST:event_transporterFieldMouseClicked

    private void invoiceNoFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceNoFieldMouseClicked
        // TODO add your handling code here:
        loadInvoiceDialog.setVisible(true);

        Object[] invoiceData = loadInvoiceDialog.getInvoiceData();
        invoiceNoField.setText(new String(invoiceData[0] + ""));
        deliveryChargeField.setText(new String(invoiceData[1] + ""));
    }//GEN-LAST:event_invoiceNoFieldMouseClicked

    private void invoiceNoFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceNoFieldKeyPressed
        // TODO add your handling code here:
        String invoiceNo = invoiceNoField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            invoiceNoField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                invoiceNoField.setEditable(true);
            } else {
                invoiceNoField.setEditable(false);
            }
        }
    }//GEN-LAST:event_invoiceNoFieldKeyPressed

    private void deliveryChargeFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deliveryChargeFieldKeyPressed
        // TODO add your handling code here:
        String deliveryCharge = deliveryChargeField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            deliveryChargeField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                deliveryChargeField.setEditable(true);
            } else {
                deliveryChargeField.setEditable(false);
            }
        }
    }//GEN-LAST:event_deliveryChargeFieldKeyPressed

    private void keywordFieldFullFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFullFocusGained
        if (keywordFieldFull.getText().equals("Search")) {
            keywordFieldFull.setText("");
            keywordFieldFull.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_keywordFieldFullFocusGained

    private void keywordFieldFullFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFullFocusLost
        // TODO add your handling code here:
        if (keywordFieldFull.getText().equals("")) {
            keywordFieldFull.setText("Search");
            keywordFieldFull.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_keywordFieldFullFocusLost

    private void keywordFieldFullKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordFieldFullKeyReleased
        // TODO add your handling code here:
        String keywordFull = keywordFieldFull.getText();
        deliveryModel.loadDeliveryTableFull(keywordFull, deliveryTableModelFull);
    }//GEN-LAST:event_keywordFieldFullKeyReleased

    private void invoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButtonActionPerformed
        // TODO add your handling code here:
        int deliveryNo = Integer.parseInt(deliveryNoField.getText());
        new GenerateDeliveryInvoiceDialog(this, true, deliveryNo).setVisible(true);
    }//GEN-LAST:event_invoiceButtonActionPerformed

    private void invoiceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButton1ActionPerformed
        // TODO add your handling code here:
        int rowCount = deliveryTableFull.getRowCount();
        int selectedRow = deliveryTableFull.getSelectedRow();
        int selectedRowCount = deliveryTableFull.getSelectedRowCount();

        if (selectedRowCount == 1) {
            int deliveryNo = (int) deliveryTableModelFull.getValueAt(selectedRow, 0);
            new GenerateDeliveryInvoiceDialog(this, true, deliveryNo).setVisible(true);
        } else {
            if (rowCount == 0) {
                JOptionPane.showConfirmDialog(rootPane, "Table is Empty !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Table is Empty !");
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Please Select any Single Row !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Please Select any Single Row !");
            }
        }

    }//GEN-LAST:event_invoiceButton1ActionPerformed

    private void deliveryHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryHistoryButtonActionPerformed
        // TODO add your handling code here:
        new GenerateDeliveryHistoryDialog(this, true).setVisible(true);
    }//GEN-LAST:event_deliveryHistoryButtonActionPerformed

    private void deliveryNoLoad() {
        int loadDeliveryNo = deliveryModel.getDeliveryNo();
        loadDeliveryNo++;
        deliveryNoField.setText(new String(loadDeliveryNo + ""));
    }

    private void clearFields() {
        deliveryNoLoad();
        deliveryDateChooser.setDate(new java.util.Date());
        trnsporterNo = 0;
        transporterField.setText("");
        invoiceNoField.setText("0");
        startLocationField.setText("");
        endLocationField.setText("");
        deliveryChargeField.setText("0.00");

        saveButton.setEnabled(true);
        updateButton.setEnabled(false);
        removeButton.setEnabled(false);
        invoiceButton.setEnabled(false);
        
        logger.debug("clearFields");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DeliveryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DeliveryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DeliveryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DeliveryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deliveryChargeField;
    private com.toedter.calendar.JDateChooser deliveryDateChooser;
    private javax.swing.JButton deliveryHistoryButton;
    private javax.swing.JTextField deliveryNoField;
    private javax.swing.JTable deliveryTable;
    private javax.swing.JTable deliveryTableFull;
    private javax.swing.JTextField endLocationField;
    private javax.swing.JButton invoiceButton;
    private javax.swing.JButton invoiceButton1;
    private javax.swing.JTextField invoiceNoField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField keywordField;
    private javax.swing.JTextField keywordFieldFull;
    private javax.swing.JButton newButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField startLocationField;
    private javax.swing.JTextField transporterField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
