/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.SalesModel;
import org.apache.log4j.Logger;

/**
 *
 * @author EZIO AUDITORY
 */
public class SalesManager extends javax.swing.JFrame {

    /**
     * Creates new form SalesManager
     */
    private SalesModel salesModel;
    private LoadCustomerDialog loadCustomerDialog;
    private LoadProductDialog loadProductDialog;
    static Logger logger = Logger.getLogger(SalesManager.class.getName());

    DefaultTableModel invoiceTableModel;
    DefaultTableModel invoiceTableModelFull;
    DefaultTableModel salesTableModelFull;

    int customerNo;

    public SalesManager() {
        initComponents();
        logger.debug("Access to SalesManager.java");

        invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        invoiceTableModelFull = (DefaultTableModel) invoiceTableFull.getModel();
        salesTableModelFull = (DefaultTableModel) salesTableFull.getModel();

        salesModel = new SalesModel();
        loadCustomerDialog = new LoadCustomerDialog(this, rootPaneCheckingEnabled);
        loadProductDialog = new LoadProductDialog(this, rootPaneCheckingEnabled);

        salesModel.loadInvoiceTableFull("", invoiceTableModelFull);
        salesModel.loadSalesTableFull("", salesTableModelFull);

        invoiceNoLoad();

        invoiceDateChooser.setDate(new java.util.Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        invoiceNoField = new javax.swing.JTextField();
        invoiceDateChooser = new com.toedter.calendar.JDateChooser();
        customerNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        discountField = new javax.swing.JTextField();
        totalAmountField = new javax.swing.JTextField();
        netAmountField = new javax.swing.JTextField();
        taxField = new javax.swing.JTextField();
        itemCountField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        deliveryChargeField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        addRowButton = new javax.swing.JButton();
        deleteRowButton = new javax.swing.JButton();
        saveInvoiceButton = new javax.swing.JButton();
        newGrnButton = new javax.swing.JButton();
        invoiceButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        keywordFieldFull = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        invoiceTableFull = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        invoiceButton1 = new javax.swing.JButton();
        invoiceHistoryButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        keywordFieldFull1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        salesTableFull = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        salesHistoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sales Manager");
        setResizable(false);

        invoiceNoField.setEnabled(false);

        customerNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerNameFieldMouseClicked(evt);
            }
        });

        jLabel1.setText("Invoice No");

        jLabel2.setText("Customer");

        jLabel3.setText("Invoice Date");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(invoiceNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(invoiceDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
                    .addComponent(customerNameField))
                .addGap(654, 654, 654))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoiceNoField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(invoiceDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        invoiceTable.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Product", "Qty", "Unit", "Unit Sell Price", "Discount", "Tax", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        invoiceTable.setDragEnabled(true);
        invoiceTable.setRowHeight(30);
        invoiceTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });
        invoiceTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceTable);
        if (invoiceTable.getColumnModel().getColumnCount() > 0) {
            invoiceTable.getColumnModel().getColumn(0).setMinWidth(25);
            invoiceTable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        discountField.setText("0.00");
        discountField.setEnabled(false);

        totalAmountField.setText("0.00");
        totalAmountField.setEnabled(false);

        netAmountField.setText("0.00");
        netAmountField.setEnabled(false);

        taxField.setText("0.00");
        taxField.setEnabled(false);

        itemCountField.setText("0");
        itemCountField.setEnabled(false);

        jLabel4.setText("Item Count");

        jLabel5.setText("Discount");

        jLabel6.setText("Tax");

        jLabel7.setText("Total Amount");

        jLabel8.setText("Net Amount");

        jLabel9.setText("Delivary Charge");

        deliveryChargeField.setText("0.00");
        deliveryChargeField.setEnabled(false);
        deliveryChargeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deliveryChargeFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deliveryChargeFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(taxField, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(discountField, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(itemCountField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalAmountField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(netAmountField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(deliveryChargeField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deliveryChargeField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(itemCountField))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(discountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taxField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(netAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addRowButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addRowButton.setText("Add Row");
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonActionPerformed(evt);
            }
        });

        deleteRowButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteRowButton.setText("Delete Row");
        deleteRowButton.setEnabled(false);
        deleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowButtonActionPerformed(evt);
            }
        });

        saveInvoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveInvoiceButton.setText("Save Invoice");
        saveInvoiceButton.setEnabled(false);
        saveInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvoiceButtonActionPerformed(evt);
            }
        });

        newGrnButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newGrnButton.setText("New");
        newGrnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGrnButtonActionPerformed(evt);
            }
        });

        invoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton.setText("Invoice");
        invoiceButton.setEnabled(false);
        invoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(newGrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newGrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Sale", jPanel1);

        keywordFieldFull.setForeground(new java.awt.Color(153, 153, 153));
        keywordFieldFull.setText("Search");
        keywordFieldFull.setToolTipText("Search");
        keywordFieldFull.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keywordFieldFullFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordFieldFullFocusLost(evt);
            }
        });
        keywordFieldFull.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordFieldFullKeyReleased(evt);
            }
        });

        invoiceTableFull.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Invoice Date", "Customer", "Item Count", "Delivery Charge", "Total Discount", "Total Tax", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTableFull.setRowHeight(25);
        jScrollPane3.setViewportView(invoiceTableFull);

        invoiceButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton1.setText("Invoice");
        invoiceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButton1ActionPerformed(evt);
            }
        });

        invoiceHistoryButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceHistoryButton.setText("Invoice History");
        invoiceHistoryButton.setOpaque(false);
        invoiceHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceHistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keywordFieldFull, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1472, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(invoiceHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(keywordFieldFull, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Invoice History", jPanel2);

        keywordFieldFull1.setForeground(new java.awt.Color(153, 153, 153));
        keywordFieldFull1.setText("Search");
        keywordFieldFull1.setToolTipText("Search");
        keywordFieldFull1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keywordFieldFull1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordFieldFull1FocusLost(evt);
            }
        });
        keywordFieldFull1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordFieldFull1KeyReleased(evt);
            }
        });

        salesTableFull.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales No", "Sell Date", "Product No", "Product Name", "Qty", "Unit", "Unit Buy Price", "Discount", "Tax", "Amount", "Invoice No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesTableFull.setRowHeight(25);
        jScrollPane4.setViewportView(salesTableFull);

        salesHistoryButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salesHistoryButton.setText("Salse History");
        salesHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesHistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keywordFieldFull1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(salesHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1322, 1322, 1322)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(keywordFieldFull1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salesHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales History", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void customerNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerNameFieldMouseClicked
        // TODO add your handling code here:
        loadCustomerDialog.setVisible(true);

        Object[] customerData = loadCustomerDialog.getCustomerData();
        customerNo = (int) customerData[0];
        customerNameField.setText((String) customerData[1]);
        //System.out.println(customerNo);
    }//GEN-LAST:event_customerNameFieldMouseClicked

    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = invoiceTable.getSelectedRow();
        int selectedColumn = invoiceTable.getSelectedColumn();

        if (selectedColumn == 1) {
            loadProductDialog.setVisible(true);

            Object[] productData = loadProductDialog.getProductData();

            Object productNoo = productData[0];
            String productName = (String) productData[1];
            Object productQty = productData[2];
            //int productUnitNo = (int) productData[3];
            Object productUnitName = productData[4];
            Object productUnitSellPrice = productData[5];
            Object productDiscount = productData[6];
            Object productTax = productData[7];

            invoiceTableModel.setValueAt(productNoo, selectedRow, 0);
            invoiceTableModel.setValueAt(productName, selectedRow, 1);
            invoiceTableModel.setValueAt(productQty, selectedRow, 2);
            invoiceTableModel.setValueAt(productUnitName, selectedRow, 3);
            invoiceTableModel.setValueAt(productUnitSellPrice, selectedRow, 4);
            invoiceTableModel.setValueAt(productDiscount, selectedRow, 5);
            invoiceTableModel.setValueAt(productTax, selectedRow, 6);
            invoiceTableModel.setValueAt(0.00, selectedRow, 7);

        } else {

            if ((int) invoiceTableModel.getValueAt(selectedRow, 0) == 0 || invoiceTableModel.getValueAt(selectedRow, 1) == null) {

                loadProductDialog.setVisible(true);
                Object[] productData = loadProductDialog.getProductData();

                Object productNoo = productData[0];
                String productName = (String) productData[1];
                Object productQty = productData[2];
                //int productUnitNo = (int) productData[3];
                Object productUnitName = productData[4];
                Object productUnitSellPrice = productData[5];
                Object productDiscount = productData[6];
                Object productTax = productData[7];

                invoiceTableModel.setValueAt(productNoo, selectedRow, 0);
                invoiceTableModel.setValueAt(productName, selectedRow, 1);
                invoiceTableModel.setValueAt(productQty, selectedRow, 2);
                invoiceTableModel.setValueAt(productUnitName, selectedRow, 3);
                invoiceTableModel.setValueAt(productUnitSellPrice, selectedRow, 4);
                invoiceTableModel.setValueAt(productDiscount, selectedRow, 5);
                invoiceTableModel.setValueAt(productTax, selectedRow, 6);
                invoiceTableModel.setValueAt(0.00, selectedRow, 7);
            }
        }
        calculateValues();
    }//GEN-LAST:event_invoiceTableMouseClicked

    private void invoiceTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceTableKeyReleased
        // TODO add your handling code here:
        calculateValues();
    }//GEN-LAST:event_invoiceTableKeyReleased

    private void addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonActionPerformed
        // TODO add your handling code here:
        if (customerNo != 0 && customerNameField.getText().length() > 0) {
            invoiceTableModel.addRow(new Object[]{0, null, 0.00, "Number", 0.00, 0.00, 0.00, 0.00});
            deleteRowButton.setEnabled(true);
            saveInvoiceButton.setEnabled(true);
            deliveryChargeField.setEnabled(true);
            itemCountField.setText(String.valueOf(invoiceTableModel.getRowCount()));
        } else {
            loadCustomerDialog.setVisible(true);
            Object[] customerData = loadCustomerDialog.getCustomerData();
            customerNo = (int) customerData[0];
            customerNameField.setText((String) customerData[1]);
        }
    }//GEN-LAST:event_addRowButtonActionPerformed

    private void deleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowButtonActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceTable.getRowCount();
        int selectedRow = invoiceTable.getSelectedRow();
        int selectedRowCount = invoiceTable.getSelectedRowCount();

        if (selectedRowCount == 1) {
            invoiceTableModel.removeRow(selectedRow);
            if(rowCount == 1){
                deleteRowButton.setEnabled(false);
                saveInvoiceButton.setEnabled(false);
            }
        } else {
            //if (rowCount == 0) {
             //   JOptionPane.showConfirmDialog(rootPane, "Table is Empty !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            //} else {
                JOptionPane.showConfirmDialog(rootPane, "Please Select any Single Row !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Please Select any Single Row !");
           // }
        }
    }//GEN-LAST:event_deleteRowButtonActionPerformed

    private void saveInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvoiceButtonActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceTableModel.getRowCount();

        boolean checkEmptyRows = false;
        for (int i = 0; i < rowCount; i++) {
            int productNo = (int) invoiceTableModel.getValueAt(i, 0);
            String productName = (String) invoiceTableModel.getValueAt(i, 1);
            if (productNo == 0 || productName == null) {
                checkEmptyRows = true;
                break;
            }
        }

        if (checkEmptyRows) {
            JOptionPane.showConfirmDialog(rootPane, "There is some Empty Rows !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            logger.error("Error: There is some Empty Rows !");
        } else {

            String invoiceNo = invoiceNoField.getText();
            Date invoiceDate = invoiceDateChooser.getDate();
            //customerNo in hear
            String itemCount = itemCountField.getText();
            String deliveryCharge = deliveryChargeField.getText();
            String totalDiscount = discountField.getText();
            String totalTax = taxField.getText();
            String totalAmount = totalAmountField.getText();

            String invoiceResult = salesModel.saveInvoice(invoiceNo, invoiceDate, customerNo, itemCount, deliveryCharge, totalDiscount, totalTax, totalAmount);

            String salesResult = null;
            for (int i = 0; i < rowCount; i++) {
                int productNo = (int) invoiceTableModel.getValueAt(i, 0);
                double qty = (double) invoiceTableModel.getValueAt(i, 2);
                double unitSellPrice = (double) invoiceTableModel.getValueAt(i, 4);
                double discount = (double) invoiceTableModel.getValueAt(i, 5);
                double tax = (double) invoiceTableModel.getValueAt(i, 6);
                double amount = (double) invoiceTableModel.getValueAt(i, 7);

                salesResult = salesModel.saveSales(productNo, qty, unitSellPrice, discount, tax, amount, invoiceNo);
            }

            if (invoiceResult.equals("Success") && salesResult.equals("Success")) {
                JOptionPane.showConfirmDialog(rootPane,  salesResult, "Message", -1, 1);
                invoiceButton.setEnabled(true);
                addRowButton.setEnabled(false);
                deleteRowButton.setEnabled(false);
                saveInvoiceButton.setEnabled(false);
                salesModel.loadInvoiceTableFull("", invoiceTableModelFull);
                salesModel.loadSalesTableFull("", salesTableModelFull);
                logger.debug("Message: " + salesResult);
            } else {
                JOptionPane.showConfirmDialog(rootPane,  salesResult, "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: " + salesResult);
            }
        }

    }//GEN-LAST:event_saveInvoiceButtonActionPerformed

    private void newGrnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGrnButtonActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceTableModel.getRowCount();

        invoiceNoLoad();
        customerNo = 0;
        customerNameField.setText("");
        invoiceDateChooser.setDate(new java.util.Date());

        itemCountField.setText("0");
        deliveryChargeField.setText("0.00");
        discountField.setText("0.00");
        taxField.setText("0.00");
        totalAmountField.setText("0.00");
        netAmountField.setText("0.00");

        addRowButton.setEnabled(true);
        deleteRowButton.setEnabled(false);
        saveInvoiceButton.setEnabled(false);
        invoiceButton.setEnabled(false);
        deliveryChargeField.setEnabled(false);

        for (int i = rowCount - 1; i >= 0; i--) {
            invoiceTableModel.removeRow(i);
        }
        
        logger.debug("clearFields");
    }//GEN-LAST:event_newGrnButtonActionPerformed

    private void invoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButtonActionPerformed
        // TODO add your handling code here:
        int invoiceNo = Integer.parseInt(invoiceNoField.getText());
        new GenerateInvoiceDialog(this, true, invoiceNo).setVisible(true);
    }//GEN-LAST:event_invoiceButtonActionPerformed

    private void keywordFieldFullFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFullFocusGained
        if (keywordFieldFull.getText().equals("Search")) {
            keywordFieldFull.setText("");
            keywordFieldFull.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_keywordFieldFullFocusGained

    private void keywordFieldFullFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFullFocusLost
        // TODO add your handling code here:
        if (keywordFieldFull.getText().equals("")) {
            keywordFieldFull.setText("Search");
            keywordFieldFull.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_keywordFieldFullFocusLost

    private void keywordFieldFullKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordFieldFullKeyReleased
        // TODO add your handling code here:
        String keywordFull = keywordFieldFull.getText();
        salesModel.loadInvoiceTableFull(keywordFull, invoiceTableModelFull);
    }//GEN-LAST:event_keywordFieldFullKeyReleased

    private void invoiceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButton1ActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceTableFull.getRowCount();
        int selectedRow = invoiceTableFull.getSelectedRow();
        int selectedRowCount = invoiceTableFull.getSelectedRowCount();

        if (selectedRowCount == 1) {
            int invoiceNo = (int) invoiceTableModelFull.getValueAt(selectedRow, 0);
            new GenerateInvoiceDialog(this, true, invoiceNo).setVisible(true);
        } else {
            if (rowCount == 0) {
                JOptionPane.showConfirmDialog(rootPane, "Table is Empty !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Table is Empty !");
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Please Select any Single Row !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Please Select any Single Row !");
            }
        }

    }//GEN-LAST:event_invoiceButton1ActionPerformed

    private void invoiceHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceHistoryButtonActionPerformed
        // TODO add your handling code here:
        new GenerateInvoiceHistoryDialog(this, true).setVisible(true);
    }//GEN-LAST:event_invoiceHistoryButtonActionPerformed

    private void keywordFieldFull1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFull1FocusGained
        // TODO add your handling code here:
        if (keywordFieldFull1.getText().equals("Search")) {
            keywordFieldFull1.setText("");
            keywordFieldFull1.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_keywordFieldFull1FocusGained

    private void keywordFieldFull1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFull1FocusLost
        // TODO add your handling code here:
        if (keywordFieldFull1.getText().equals("")) {
            keywordFieldFull1.setText("Search");
            keywordFieldFull1.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_keywordFieldFull1FocusLost

    private void keywordFieldFull1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordFieldFull1KeyReleased
        // TODO add your handling code here:
        String keywordFull1 = keywordFieldFull1.getText();
        salesModel.loadSalesTableFull(keywordFull1, salesTableModelFull);
    }//GEN-LAST:event_keywordFieldFull1KeyReleased

    private void salesHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesHistoryButtonActionPerformed
        // TODO add your handling code here:
        new GenerateSalesHistoryDialog(this, true).setVisible(true);
    }//GEN-LAST:event_salesHistoryButtonActionPerformed

    private void deliveryChargeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deliveryChargeFieldKeyReleased
        // TODO add your handling code here:
        calculateValues();
    }//GEN-LAST:event_deliveryChargeFieldKeyReleased

    private void deliveryChargeFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deliveryChargeFieldKeyPressed
        // TODO add your handling code here:
        String delivery = deliveryChargeField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            deliveryChargeField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                deliveryChargeField.setEditable(true);
            } else {
                deliveryChargeField.setEditable(false);
            }
        }
    }//GEN-LAST:event_deliveryChargeFieldKeyPressed

    private void invoiceNoLoad() {
        int loadInvoiceNo = salesModel.getInvoiceNo();
        loadInvoiceNo++;
        invoiceNoField.setText(new String(loadInvoiceNo + ""));
    }

    private void calculateValues() {
        int selectedRow = invoiceTable.getSelectedRow();
        int rowCount = invoiceTableModel.getRowCount();

        double productQty = (double) invoiceTableModel.getValueAt(selectedRow, 2);
        double productUnitSellPrice = (double) invoiceTableModel.getValueAt(selectedRow, 4);
        double productDiscount = (double) invoiceTableModel.getValueAt(selectedRow, 5);
        double productTax = (double) invoiceTableModel.getValueAt(selectedRow, 6);
        double productAmount = (productUnitSellPrice - productDiscount + productTax) * productQty;

        invoiceTableModel.setValueAt(productAmount, selectedRow, 7);

        itemCountField.setText(String.valueOf(rowCount));

        double deliveryCharge = Double.parseDouble(deliveryChargeField.getText());

        double totalDiscount = 0;
        double totalTax = 0;
        double totalAmount = deliveryCharge;

        for (int i = 0; i < rowCount; i++) {
            double rowQty = (double) invoiceTableModel.getValueAt(i, 2);

            double rowDiscount = (double) invoiceTableModel.getValueAt(i, 5);
            totalDiscount += rowDiscount * rowQty;

            double rowTax = (double) invoiceTableModel.getValueAt(i, 6);
            totalTax += rowTax * rowQty;

            double rowAmount = (double) invoiceTableModel.getValueAt(i, 7);
            totalAmount += rowAmount;
        }

        discountField.setText(String.valueOf(totalDiscount));
        taxField.setText(String.valueOf(totalTax));
        totalAmountField.setText(String.valueOf(totalAmount));
        netAmountField.setText(String.valueOf(totalAmount));
        
        logger.debug("calculateValues");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SalesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SalesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SalesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SalesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowButton;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JButton deleteRowButton;
    private javax.swing.JTextField deliveryChargeField;
    private javax.swing.JTextField discountField;
    private javax.swing.JButton invoiceButton;
    private javax.swing.JButton invoiceButton1;
    private com.toedter.calendar.JDateChooser invoiceDateChooser;
    private javax.swing.JButton invoiceHistoryButton;
    private javax.swing.JTextField invoiceNoField;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JTable invoiceTableFull;
    private javax.swing.JTextField itemCountField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField keywordFieldFull;
    private javax.swing.JTextField keywordFieldFull1;
    private javax.swing.JTextField netAmountField;
    private javax.swing.JButton newGrnButton;
    private javax.swing.JButton salesHistoryButton;
    private javax.swing.JTable salesTableFull;
    private javax.swing.JButton saveInvoiceButton;
    private javax.swing.JTextField taxField;
    private javax.swing.JTextField totalAmountField;
    // End of variables declaration//GEN-END:variables
}
